services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    networks:
        - kafka-network
    ports:
      - "2181:2181"
  kafka-0:
    build: .
    container_name: kafka-0
    networks:
        - kafka-network
    links:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka-0
      KAFKABROKER_ID: 0
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      EXTRA_ARGS: "-javaagent:/usr/app/jmx_prometheus_javaagent.jar=7071:/usr/app/prom-jmx-agent-config.yml"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafka-1:
      build: .
      container_name: kafka-1
      networks:
        - kafka-network
      links:
        - zookeeper
      ports:
        - "29093:29093"
      environment:
        KAFKA_ADVERTISED_HOST_NAME: kafka-1
        KAFKA_BROKER_ID: 1
        KAFKA_ADVERTISED_PORT: 9092
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        EXTRA_ARGS: "-javaagent:/usr/app/jmx_prometheus_javaagent.jar=7071:/usr/app/prom-jmx-agent-config.yml"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
  kafka-2:
    build: .
    container_name: kafka-2
    networks:
      - kafka-network
    links:
      - zookeeper
    ports:
      - "29094:29094"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka-2
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      EXTRA_ARGS: "-javaagent:/usr/app/jmx_prometheus_javaagent.jar=7071:/usr/app/prom-jmx-agent-config.yml"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    networks:
        - kafka-network
    ports:
      - "9090:9090/tcp"
    volumes:
      - ./prometheus:/etc/prometheus
    links:
      - kafka-0
      - kafka-1
      - kafka-2
  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
        - kafka-network
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      # - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      # - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"

networks:
    kafka-network:
      name: kafka-network
      driver: bridge

volumes:
    grafana_data:
      name: grafana_data
      driver: local